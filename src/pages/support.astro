---
import Layout from "../layouts/Layout.astro";


---


<Layout>
	<div id="container" class="pb-48">
        <div class="flex justify-center w-full">
            <div class="p-6 max-w-[1200px] w-full">
                <a href="/" class="flex items-center space-x-2 hover:text-accent transition outline-none font-semibold">
                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-arrow-left-icon lucide-arrow-left"><path d="m12 19-7-7 7-7"/><path d="M19 12H5"/></svg>
                    <span>back to home</span>
                </a>
            </div>
        </div>
        <main id="hero" class="">
            <section class="p-8 py-12 rounded-lg bg-black/15 backdrop-blur h-fit w-full max-w-[500px]">
                <span class="font-extrabold text-5xl mb-1 flex">Contact Us</span>
                <p>Have a question or need some help?</p>
				<p class="text-white/35">Get in touch with us using our email below.</p>
                <a href="mailto:hello@lunarhat.com" class="flex items-center outline-none text-white/35 hover:text-accent mt-4 transition">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-mail-icon lucide-mail"><rect width="20" height="16" x="2" y="4" rx="2"/><path d="m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"/></svg>
                    <span class="ml-2 font-bold">hello@lunarhat.com</span>
                </a>
            </section>
        </main>
    </div>
    <div class="starfield-container" id="starField"></div>
</Layout>

<script is:inline>
	document.addEventListener("DOMContentLoaded", () => {
		buildStarfield();	
	})

	function buildStarfield() {
		const starField = document.getElementById('starField');
		const starCount = 200;
	
		if (!starField) {
			console.error("container not found.");
			return;
		}
		
		// Subtle star colors
		const starColors = [
			'#fff',          // White
			'#e6e6ff',       // Pale blue
			'#ffece6',       // Pale orange/red
			'#e6fff2',       // Pale green
			'#fff6e6',       // Pale yellow
			'#f2e6ff',       // Pale purple
			'#ffe6f0'        // Pale pink
		];
		
		// Create stars
		for (let i = 0; i < starCount; i++) {
			const star = document.createElement('div');
			star.className = 'star';
			
			// Randomize star position
			const x = Math.random() * 100;
			const y = Math.random() * 100;
			star.style.left = x + '%';
			star.style.top = y + '%';
			
			// Randomize star size
			const size = Math.random() * 2 + 1;
			star.style.width = size + 'px';
			star.style.height = size + 'px';
			
			// Assign random color from our palette
			const colorIndex = Math.floor(Math.random() * starColors.length);
			star.style.color = starColors[colorIndex];
			star.style.backgroundColor = starColors[colorIndex];
			
			// Randomize star brightness
			const brightness = Math.random() * 0.5 + 0.5;
			// star.style.opacity = brightness.toString();
			star.style.opacity = "0";
			
			// Randomize animation duration
			const duration = Math.random() * 5 + 3;
			star.style.animationDuration = duration + 's';
			
			// Randomize animation delay
			const delay = Math.random() * duration;
			star.style.animationDelay = delay + 's';
			
			starField.appendChild(star);
		}
	}
</script>

<style>
	.starfield-container {
		position: fixed;
		top: 0;
		z-index: -1;
		width: 100%;
		height: 100%;
		perspective: 500px;
	}
	
	:global(.star) {
		position: absolute;
		width: 2px;
		height: 2px;
		border-radius: 50%;
		animation: moveStar linear infinite;
		box-shadow: 0 0 4px currentColor;
	}
	
	@keyframes moveStar {
		0% {
			transform: translateZ(0) translateX(-50%) translateY(-50%);
			opacity: 0;
		}
		10% {
			opacity: 1;
		}
		90% {
			opacity: 1;
		}
		100% {
			transform: translateZ(1000px) translateX(-50%) translateY(-50%);
			opacity: 0;
		}
	}
</style>